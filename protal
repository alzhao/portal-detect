#!/bin/sh

ACTION=$1
INTERFACE=$2
DEVICE=$3
GATEWAY=$4
lan_ip=""
auth_ip=""
redict_url=""
wg_en="0"
ov_en="0"

poll_protal()
{
	local inv=0.5
	while [ true ];do
	http_code=$(curl --interface $DEVICE --dns-servers $GATEWAY  captive.apple.com -s -w "%{http_code}" -o /dev/null)
	[ "$http_code" = 302 ] || {
		remove_protal		
		echo "authenticated"
		break
	}
	#sleep 0.5

	done
}

join_protal()
{
	#auth_ip=$(curl --interface $DEVICE --dns-server $GATEWAY -Ls -w "%{remote_ip}"  captive.apple.com -o /dev/null)
	#[ -z "$auth_ip" ] && return
	
	#echo auth_ip:$auth_ip

	lan_ip=$(ifstatus lan | jsonfilter -e '@["ipv4-address"][0].address')
	[ -z "$lan_ip" ] && return

	ipset create gl_protal_whitelist hash:net
	ipset add gl_protal_whitelist ${GATEWAY}/32
	
	uci add_list dhcp.@dnsmasq[0].address=/.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.net/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.org/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.top/$GATEWAY

	
	uci add_list dhcp.@dnsmasq[0].server=/$redict_url/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/$redict_url/gl_protal_whitelist
	uci add_list dhcp.@dnsmasq[0].server=/apple.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/apple.com/gl_protal_whitelist
	uci add_list dhcp.@dnsmasq[0].server=/captive.apple.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/captive.apple.com/gl_protal_whitelist
	
	uci commit dhcp
	/etc/init.d/dnsmasq restart
	
	iptables  -N GL_PROTAL
	iptables  -I FORWARD -j GL_PROTAL
	iptables  -I GL_PROTAL -i br-lan -o $DEVICE -j DROP
	iptables  -I GL_PROTAL -m set --match-set gl_protal_whitelist dst -j ACCEPT

	
	iptables -t nat -N GL_PROTAL
	iptables -t nat -I PREROUTING -j GL_PROTAL
	iptables -t nat -A GL_PROTAL -p udp -m udp --dport 53 -j DNAT --to-destination $lan_ip
	iptables -t nat -A GL_PROTAL -p tcp -m tcp --dport 53 -j DNAT --to-destination $lan_ip
	
	iptables -t mangle -N GL_PROTAL
	iptables -t mangle -A PREROUTING -j GL_PROTAL
	iptables -t mangle -A GL_PROTAL -m set --match-set gl_protal_whitelist dst -m conntrack --ctstate NEW  -j MARK --set-mark 0x80/0x80
	iptables -t mangle -A GL_PROTAL -m mark  --mark 0x80/0x80 -j CONNMARK --save-mark --nfmask 0x80 --ctmask 0x80
	iptables -t mangle -A GL_PROTAL -m mark  --mark 0x80/0x80 -j CONNMARK --restore-mark --nfmask 0x80 --ctmask 0x80
	
	ip route add via $GATEWAY 0.0.0.0/1 dev wlan-sta metric 10 table 50
	ip route add via $GATEWAY 128.0.0.0/1 dev wlan-sta metric 10 table 50
	ip rule add fwmark 0x80/0x80 table 50
	
	
}

remove_protal()
{
	redict_url="customer.hotspotsystem.com"

	ip rule del fwmark 0x80/0x80 table 50
	ip route flush table 50
	echo " " >/proc/net/nf_conntrack
	
	iptables -t mangle -D PREROUTING -j GL_PROTAL
	iptables -t mangle -F  GL_PROTAL
	iptables -t mangle -X GL_PROTAL	
	
	iptables -t nat -D PREROUTING -j GL_PROTAL
	iptables -t nat -F  GL_PROTAL
	iptables -t nat -X GL_PROTAL
	
	iptables -D FORWARD -j GL_PROTAL
	iptables -F  GL_PROTAL
	iptables -X GL_PROTAL	

	uci del_list dhcp.@dnsmasq[0].address=/.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.net/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.org/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.top/$GATEWAY
	
	uci del_list dhcp.@dnsmasq[0].server=/$redict_url/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/$redict_url/gl_protal_whitelist
	uci del_list dhcp.@dnsmasq[0].server=/apple.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/apple.com/gl_protal_whitelist
	uci del_list dhcp.@dnsmasq[0].server=/captive.apple.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/captive.apple.com/gl_protal_whitelist
            
    uci commit dhcp                                                         
    /etc/init.d/dnsmasq restart	
	
	ipset destroy gl_protal_whitelist
}


[ "$ACTION" = "join" ] && {
	tmp=$(curl --interface $DEVICE --dns-servers $GATEWAY  captive.apple.com -s -w "%{http_code}:%{redirect_url}" -o /dev/null)
	http_code=$(echo $tmp|awk -F ':' '{print $1}')
	[ "$http_code" = 302 ] || exit 0
	redict_url=$(echo $tmp|awk -F '/' '{print $3}')
	echo "httpcode:$http_code"
	echo "URL:$redict_url"
	echo "join protal"
	join_protal
	poll_protal
	exit 0
}

[ "$ACTION" = "remove" ] && {
	remove_protal
	exit 0
}

[ "$ACTION" = "poll" ] && {
	poll_protal
	exit 0
}




