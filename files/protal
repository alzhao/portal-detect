#!/bin/sh

ACTION=$1
INTERFACE=$2
DEVICE=$3
GATEWAY=$4
lan_ip=""
auth_ip=""
redict_url=""
result=0
trap "clear_protal" INT TERM QUIT KILL
[ -f /var/run/protal.lock ] && exit 0

[ -z "$INTERFACE" ] && {
	INTERFACE="wwan"
}

[ -z "$DEVICE" ] && {
	DEVICE=$(ifstatus wwan|jsonfilter -e  @.l3_device)
}

[ -z "$GATEWAY" ] && {
	GATEWAY=$(ifstatus wwan|jsonfilter -e  @.route[0].nexthop)
}

[ -z "$DEVICE" -o -z "$GATEWAY" -o -z "$ACTION" ] && {
	logger -t protal-prarm "$ACTION $DEVICE $GATEWAY"
	exit 0
}

touch /var/run/protal.lock

ipt_safe()
{
	$@
	[ ! $? = 0  ] && {
		logger "iptables command execute failed, try again!"
		sleep 1
		$@
	}
	
}


probe_protal()
{
	logger -t protal-probe "probe"
	tmp=$(curl --connect-timeout 5 --interface $DEVICE --dns-servers $GATEWAY  captive.apple.com -s -w "%{http_code}:%{redirect_url}" -o /dev/null)
	[ $? = 0 ] || {
		result=0
		return 0	
	}
	http_code=$(echo $tmp|awk -F ':' '{print $1}')
	[ "$http_code" = 302 ] || {
		result=0
		return 0
	}
	redict_url=$(echo $tmp|awk -F '/' '{print $3}')
	logger -t protal-probe "httpcode:$http_code URL:$redict_url"
	result=2
}

poll_protal()
{
	logger -t protal-probe "poll"
	while [ true ];do
	http_code=$(curl --connect-timeout 5 --interface $DEVICE --dns-servers $GATEWAY  captive.apple.com -s -w "%{http_code}" -o /dev/null)
	[ $? = 0 ] || continue
	[ "$http_code" = 302  ] || {
		logger -t protal-poll "authenticated"
		sleep 5
		remove_protal
		break
	}
	#sleep 5
	done
}

join_protal()
{
	#auth_ip=$(curl --interface $DEVICE --dns-server $GATEWAY -Ls -w "%{remote_ip}"  captive.apple.com -o /dev/null)
	#[ -z "$auth_ip" ] && return
	
	#echo auth_ip:$auth_ip

	lan_ip=$(ifstatus lan | jsonfilter -e '@["ipv4-address"][0].address')
	[ -z "$lan_ip" ] && {
		logger -t protal-join "lan ip is null"
		return
	}

	ipset create gl_protal_whitelist hash:net
	ipset add gl_protal_whitelist ${GATEWAY}/32
	
	uci add_list dhcp.@dnsmasq[0].address=/.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.net/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.org/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.top/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].address=/.cn/$GATEWAY

	
	uci add_list dhcp.@dnsmasq[0].server=/$redict_url/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/$redict_url/gl_protal_whitelist
	uci add_list dhcp.@dnsmasq[0].server=/apple.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/apple.com/gl_protal_whitelist
	uci add_list dhcp.@dnsmasq[0].server=/captive.apple.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/captive.apple.com/gl_protal_whitelist
	uci add_list dhcp.@dnsmasq[0].server=/ssl.google-analytics.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/ssl.google-analytics.com/gl_protal_whitelist
	uci add_list dhcp.@dnsmasq[0].server=/captive.g.aaplimg.com/$GATEWAY
	uci add_list dhcp.@dnsmasq[0].ipset=/captive.g.aaplimg.com/gl_protal_whitelist		
	
	uci commit dhcp
	/etc/init.d/dnsmasq restart
	
	iptables  -N GL_PROTAL
	iptables  -I FORWARD -j GL_PROTAL
	iptables  -I GL_PROTAL -m set --match-set gl_protal_whitelist dst -j ACCEPT

	
	iptables -t nat -N GL_PROTAL
	iptables -t nat -I PREROUTING -j GL_PROTAL
	iptables -t nat -A GL_PROTAL -p udp -m udp --dport 53 -j DNAT --to-destination $lan_ip
	iptables -t nat -A GL_PROTAL -p tcp -m tcp --dport 53 -j DNAT --to-destination $lan_ip
	
	iptables -t mangle -N GL_PROTAL
	iptables -t mangle -A PREROUTING -j GL_PROTAL
	iptables -t mangle -A GL_PROTAL -m set --match-set gl_protal_whitelist dst -m conntrack --ctstate NEW  -j MARK --set-mark 0x80/0x80
	iptables -t mangle -A GL_PROTAL -m mark  --mark 0x80/0x80 -j CONNMARK --save-mark --nfmask 0x80 --ctmask 0x80
	iptables -t mangle -A GL_PROTAL -m mark  --mark 0x80/0x80 -j CONNMARK --restore-mark --nfmask 0x80 --ctmask 0x80
	
	ip route add via $GATEWAY 0.0.0.0/1 dev wlan-sta  table 50
	ip route add via $GATEWAY 128.0.0.0/1 dev wlan-sta  table 50
	ip rule add fwmark 0x80/0x80 table 50
	
	
}

remove_protal()
{
	logger -t protal-remove "remove"
	ip rule del fwmark 0x80/0x80 table 50
	ip route flush table 50
	echo " " >/proc/net/nf_conntrack
	
	ipt_safe iptables -t mangle -D PREROUTING -j GL_PROTAL
	ipt_safe iptables -t mangle -F  GL_PROTAL
	ipt_safe iptables -t mangle -X GL_PROTAL	
	
	ipt_safe iptables -t nat -D PREROUTING -j GL_PROTAL
	ipt_safe iptables -t nat -F  GL_PROTAL
	ipt_safe iptables -t nat -X GL_PROTAL
	
	ipt_safe iptables -D FORWARD -j GL_PROTAL
	ipt_safe iptables -F  GL_PROTAL
	ipt_safe iptables -X GL_PROTAL	

	uci del_list dhcp.@dnsmasq[0].address=/.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.net/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.org/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.top/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].address=/.cn/$GATEWAY
	
	uci del_list dhcp.@dnsmasq[0].server=/apple.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/apple.com/gl_protal_whitelist
	uci del_list dhcp.@dnsmasq[0].server=/captive.apple.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/captive.apple.com/gl_protal_whitelist
	uci del_list dhcp.@dnsmasq[0].server=/ssl.google-analytics.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/ssl.google-analytics.com/gl_protal_whitelist
	uci del_list dhcp.@dnsmasq[0].server=/captive.g.aaplimg.com/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/captive.g.aaplimg.com/gl_protal_whitelist
	[ -z "$redict_url" ] && {
		redict_url=$(uci get dhcp.@dnsmasq[0].server|awk -F '/' '{printf $2}')
	}
	uci del_list dhcp.@dnsmasq[0].server=/$redict_url/$GATEWAY
	uci del_list dhcp.@dnsmasq[0].ipset=/$redict_url/gl_protal_whitelist	
            
    uci commit dhcp                                                         
    /etc/init.d/dnsmasq restart	
	
	ipset destroy gl_protal_whitelist
}

clear_protal() {
	remove_protal
	[ -f /var/run/protal.lock ] && rm /var/run/protal.lock
	exit 0
}

[ "$ACTION" = "join" ] && {
	while [ true ];do
		probe_protal
		[ $result = 2 ] && {
			join_protal
			poll_protal
		}
		sleep 10
	done
}

[ "$ACTION" = "remove" ] && {
	remove_protal
}

[ "$ACTION" = "poll" ] && {
	poll_protal
}

[ "$ACTION" = "probe" ] && {
	probe_protal
}

[ -f /var/run/protal.lock ] && rm /var/run/protal.lock
exit $result



